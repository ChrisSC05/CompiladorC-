//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/chris/OneDrive/Documentos/Proyectos Git/Proyecto 2 Bases 2/CompiladorC-/AlphaParser/AlphaCompiler/AlphaParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IAlphaParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class AlphaParserBaseListener : IAlphaParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] AlphaParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] AlphaParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDecl([NotNull] AlphaParser.ClassDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDecl([NotNull] AlphaParser.ClassDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassBody([NotNull] AlphaParser.ClassBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassBody([NotNull] AlphaParser.ClassBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDecl([NotNull] AlphaParser.VarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDecl([NotNull] AlphaParser.VarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.constDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstDecl([NotNull] AlphaParser.ConstDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.constDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstDecl([NotNull] AlphaParser.ConstDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDecl([NotNull] AlphaParser.MethodDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDecl([NotNull] AlphaParser.MethodDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.formPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormPars([NotNull] AlphaParser.FormParsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.formPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormPars([NotNull] AlphaParser.FormParsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] AlphaParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] AlphaParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>assignStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignStatement([NotNull] AlphaParser.AssignStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>assignStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignStatement([NotNull] AlphaParser.AssignStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>callStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallStatement([NotNull] AlphaParser.CallStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>callStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallStatement([NotNull] AlphaParser.CallStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>incStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncStatement([NotNull] AlphaParser.IncStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>incStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncStatement([NotNull] AlphaParser.IncStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>decStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecStatement([NotNull] AlphaParser.DecStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>decStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecStatement([NotNull] AlphaParser.DecStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] AlphaParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] AlphaParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] AlphaParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] AlphaParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] AlphaParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] AlphaParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] AlphaParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] AlphaParser.BreakStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] AlphaParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] AlphaParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>readStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReadStatement([NotNull] AlphaParser.ReadStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>readStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReadStatement([NotNull] AlphaParser.ReadStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>printStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintStatement([NotNull] AlphaParser.PrintStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>printStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintStatement([NotNull] AlphaParser.PrintStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>blockStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockStatement([NotNull] AlphaParser.BlockStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>blockStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockStatement([NotNull] AlphaParser.BlockStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>emptyStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptyStatement([NotNull] AlphaParser.EmptyStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>emptyStatement</c>
	/// labeled alternative in <see cref="AlphaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptyStatement([NotNull] AlphaParser.EmptyStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] AlphaParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] AlphaParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.actPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterActPars([NotNull] AlphaParser.ActParsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.actPars"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitActPars([NotNull] AlphaParser.ActParsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] AlphaParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] AlphaParser.ConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.condTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondTerm([NotNull] AlphaParser.CondTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.condTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondTerm([NotNull] AlphaParser.CondTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.condFact"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondFact([NotNull] AlphaParser.CondFactContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.condFact"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondFact([NotNull] AlphaParser.CondFactContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="AlphaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpr([NotNull] AlphaParser.UnaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="AlphaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpr([NotNull] AlphaParser.UnaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryExpr</c>
	/// labeled alternative in <see cref="AlphaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryExpr([NotNull] AlphaParser.BinaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryExpr</c>
	/// labeled alternative in <see cref="AlphaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryExpr([NotNull] AlphaParser.BinaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>termExpr</c>
	/// labeled alternative in <see cref="AlphaParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermExpr([NotNull] AlphaParser.TermExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>termExpr</c>
	/// labeled alternative in <see cref="AlphaParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermExpr([NotNull] AlphaParser.TermExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>callFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallFactor([NotNull] AlphaParser.CallFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>callFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallFactor([NotNull] AlphaParser.CallFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>designatorFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDesignatorFactor([NotNull] AlphaParser.DesignatorFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>designatorFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDesignatorFactor([NotNull] AlphaParser.DesignatorFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>intFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntFactor([NotNull] AlphaParser.IntFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntFactor([NotNull] AlphaParser.IntFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>doubleFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoubleFactor([NotNull] AlphaParser.DoubleFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>doubleFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoubleFactor([NotNull] AlphaParser.DoubleFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolFactor([NotNull] AlphaParser.BoolFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolFactor([NotNull] AlphaParser.BoolFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>charFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharFactor([NotNull] AlphaParser.CharFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>charFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharFactor([NotNull] AlphaParser.CharFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringFactor([NotNull] AlphaParser.StringFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringFactor([NotNull] AlphaParser.StringFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>nullFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullFactor([NotNull] AlphaParser.NullFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>nullFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullFactor([NotNull] AlphaParser.NullFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>newArrayFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewArrayFactor([NotNull] AlphaParser.NewArrayFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>newArrayFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewArrayFactor([NotNull] AlphaParser.NewArrayFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>groupFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroupFactor([NotNull] AlphaParser.GroupFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>groupFactor</c>
	/// labeled alternative in <see cref="AlphaParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroupFactor([NotNull] AlphaParser.GroupFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.cast"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCast([NotNull] AlphaParser.CastContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.cast"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCast([NotNull] AlphaParser.CastContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.designator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDesignator([NotNull] AlphaParser.DesignatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.designator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDesignator([NotNull] AlphaParser.DesignatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelop([NotNull] AlphaParser.RelopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelop([NotNull] AlphaParser.RelopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.addop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddop([NotNull] AlphaParser.AddopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.addop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddop([NotNull] AlphaParser.AddopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.mulop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulop([NotNull] AlphaParser.MulopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.mulop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulop([NotNull] AlphaParser.MulopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlphaParser.printStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintStmt([NotNull] AlphaParser.PrintStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlphaParser.printStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintStmt([NotNull] AlphaParser.PrintStmtContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
